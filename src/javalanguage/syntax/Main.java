package javalanguage.syntax;

public class Main {
    public static void main(String[] args) {
        //&,|, ^
        //<<, >>, ~

        int a = 1;
        printBinary(a, 32); // результат: 00000000000000000000000000000001
        int b = 2;
        printBinary(b, 32); // результат: 00000000000000000000000000000010
        int c = 3;
        printBinary(c, 32); // результат: 00000000000000000000000000000011
        int d = 4;
        printBinary(d, 32); // результат: 00000000000000000000000000000100
        int e = 5;
        printBinary(e, 32); // результат: 00000000000000000000000000000101

        int a1 = 9;
        printBinary(a1, 4);            //1001  //ВВЕЛИ длину не int а меньше просто для того чтобы учидеть нужную часть
        int b1 = 5;
        printBinary(b1, 4);            //0101
        System.out.println("оператор & (И): ");
        printBinary( b1 & a, 4); //0001 // битовый оператор оператор & (И) сравнивает биты a и b друг
        // с другом. Если оба единичка то результат будет единица. если хоть один нолик то результат ноль
        // смотрим вертикально на табличку:
        // 1001
        // 0101
        //оператор & (И):
        // 0001
        System.out.println("оператор | (ИЛИ): ");
        printBinary( b1 | a, 4); //0001 // битовый оператор оператор | (ИЛИ) сравнивает биты a и b друг
        // с другом. Если оба единичка то результат будет единица. если хоть один единица то результат единица
        // смотрим вертикально на табличку:
        //1001
        //0101

        //оператор | (ИЛИ):
        //0101
        System.out.println("оператор ^ (КСОР исключает ИЛИ и действует как ИЛИ): ");
        printBinary( b1 ^ a, 4); //0001 // битовый оператор оператор ^ (КСОР) сравнивает биты a и b друг
        // с другом. Если оба единичка то результат будет НОЛЬ. если хоть один единица то результат единица
        // смотрим вертикально на табличку:
        //1001
        //0101

        //оператор ^ (КСОР исключает ИЛИ и действует как ИЛИ):
        //0100

        System.out.println("Основа операции своп на примере трех действий оператора КСОР когда в итоге " +
                "переменные пеняются значениями: "); //СВОП - контракты (SWAP)
        //СВОП – это соглашение между двумя контрагентами  об обмене в будущем платежами в соответствии
        // с определенными в контракте условиями.

        int r = 9;
        int h = 5;

        r = r^h;
        h = r^h;
        r = r^h;
        System.out.println(r);  // в итоге int r == 5;
        System.out.println(h);  // в итоге int h == 9;


    }
    private static void printBinary(long value, int size){ //берется количество байт, и размер В БИТАХ,
        for (int i = size -1; i >= 0; i--){
            long mask = 1L << i;               //в случае long не забываем поставить L
            long result = (mask & value) >> i;
            System.out.print(result); //печатает в консоль значение бита с лева направо
        }
        System.out.println();

        //System.out.println(Long.toBinaryString(value));
    }
}
